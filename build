#!/bin/sh

set -e
set -u

cd $(dirname $0)

docker_target=${docker_target:-docker.i74.de:5000}
image_name=xilinx-ise
image_tag=14.7

## Prints the usage message
usage() {
    echo "Usage $0 [OPTIONS]"
    echo
    echo "Options:"
    echo "  -h,--help  Prints this message."
    echo "  -p,--push  Push the image to the registry"
    echo
}

## Checks that the tools listed in arguments are all installed.
check_tools() {
    for cmd in "$@"; do
        command -v $cmd >/dev/null || {
            >&2 echo "The following tools must be installed:"
            >&2 echo "    $@"
            >&2 echo "    Failed to find $cmd"
            >&2 echo
            exit 1
        }
    done
}

# Check environment
check_tools docker python3

# Parse arguments
push=
force=

while getopts fhp-: arg; do
    case $arg in
        f) force=y ;;
        h) usage; exit ;;
        p) push=y ;;
        -)
            long_optarg="${OPTARG#*=}"
            case $OPTARG in
                force) force=y ;;
                help) usage; exit;;
                push) push=y ;;
                '') break ;;
                *) >&2 echo "Illegal option --$OPTARG"; exit 1 ;;
            esac ;;
        \?) usage; exit 1;;
    esac
done

# Start small webserver to hold install files
( cd xilinx-installer; python3 -m http.server 8765 --bind 127.0.0.1 >/dev/null 2>&1 ) &
http_server_pid=$!
trap "[ $http_server_pid ] && kill $http_server_pid" EXIT INT TERM

# Lint
docker run --rm -i hadolint/hadolint < Dockerfile || true

# Build
flags="--network host --rm"
[ "x$force" != "x" ] && flags="--no-cache $flags"

docker build $flags -t ${docker_target}/${image_name}:${image_tag} .
docker tag ${docker_target}/${image_name}:${image_tag} ${docker_target}/${image_name}:latest

if [ "x$push" != "x" ]; then
    docker push ${docker_target}/${image_name}:${image_tag}
    docker push ${docker_target}/${image_name}:latest
fi
